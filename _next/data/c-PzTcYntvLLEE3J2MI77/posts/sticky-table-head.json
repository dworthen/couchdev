{"pageProps":{"source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Scrolling down a long list of tabular data without fixed column headings is annoying.\"), mdx(\"h2\", null, \"TLDR\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#demo\"\n  }, \"Skip to the end to view source code and working demo\")), mdx(\"hr\", null), mdx(\"p\", null, \"Most solutions solutions to the question \\\"how to create \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://css-tricks.com/scroll-fix-content/\"\n  }, \"sticky table headers\"), \"\\\" typically take one of two approaches.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add a fixed position to the thead or first row of the table. This approach is simple and suffices if the table is the first or only element on the page. What I am after is a scroll-then-fixed solution. Here is an \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://css-tricks.com/examples/PersistantHeaders/\"\n  }, \"example\"), \" of what I am after.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use JavaScript to duplicate the first table row and place it in a new table fixed to the top of the page and reveal or hide the duplicated row depending on the viewer's scroll position. This approach feels messy and and its worth mentioning that any event listeners set on the original elements will not work on the duplicated row (unless using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://davidwalsh.name/event-delegate\"\n  }, \"event delegation\"), \").\")), mdx(\"p\", null, \"The approach I am after is somewhere in the middle. A scroll-then-fixed solution using the original column headings to maintain event listeners.\"), mdx(\"h4\", null, \"HTML\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-HTML\"\n  }, \"<table>\\n  <thead>\\n    <tr>\\n      <th>Col 1</th>\\n      <th>Col 2</th>\\n      <th>Col 3</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td>One</td>\\n      <td>Two</td>\\n      <td>Three</td>\\n    </tr>\\n    ...\\n  </tbody>\\n</table>\\n\")), mdx(\"p\", null, \"The HTML is straightforward. Moving on...\"), mdx(\"h4\", null, \"CSS\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-CSS\"\n  }, \".fixed {\\n  position: fixed;\\n  top: 0;\\n}\\n\")), mdx(\"p\", null, \"Not much to the CSS either. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".fixed\"), \" class will be added to the thead element when a viewer scrolls to the table.\"), mdx(\"h4\", null, \"JS\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-JavaScript\"\n  }, \"/**\\n* First Calculate\\n*   - Where the thead lies on the page\\n*   - Where the table lies on the page\\n*   - Table height\\n**/\\nvar table = document.querySelector('table'),\\n    thead = table.querySelector('thead'),\\n    theadOffset = thead.getBoundingClientRect().top,\\n    tableHeight = +getComputedStyle(table)\\n                   .getPropertyValue('height')\\n                   .split('px')[0],\\n    tableOffset = table.getBoundingClientRect().top,\\n    tableCells = document.querySelectorAll('th, td');\\n\\n// Set the widths on all table cells so they dont resize when fixing\\n// the first row\\nfor (var i = 0, l = tableCells.length; i < l; i++) {\\n  var cell = tableCells[i];\\n  cell.width = getComputedStyle(el).getPropertyValue('width');\\n}\\n\\nfunction fixTableHeader(e) {\\n  // If viewer has scrolled past the first row\\n  // then fix/stick it to the top of the page\\n  if( window.pageYOffset > theadOffset ) {\\n    thead.classList.add('fixed');\\n  }\\n\\n  // If viewer has scrolled back above or past the table\\n  // then unfreeze the first row.\\n  if ( window.pageYOffset < theadOffset ||\\n       window.pageYOffset > (tableOffset + tableHeight)) {\\n      thead.classList.remove('fixed');\\n  }\\n\\n}\\n\\n// Listen...\\nwindow.addEventListener('scroll', fixTableHeader, false);\\n\")), mdx(\"h2\", null, \"DEMO\"), mdx(\"p\", {\n    \"data-height\": \"265\",\n    \"data-theme-id\": \"dark\",\n    \"data-slug-hash\": \"XKKMBo\",\n    \"data-default-tab\": \"result\",\n    \"data-user\": \"dworthen\",\n    \"data-embed-version\": \"2\",\n    \"data-pen-title\": \"Fixed Table Head\",\n    \"data-preview\": \"true\",\n    \"class\": \"codepen\"\n  }, \"See the Pen \", mdx(\"a\", {\n    href: \"https://codepen.io/dworthen/pen/XKKMBo/\"\n  }, \"Fixed Table Head\"), \" by Derek Worthen (\", mdx(\"a\", {\n    href: \"https://codepen.io/dworthen\"\n  }, \"@dworthen\"), \") on \", mdx(\"a\", {\n    href: \"https://codepen.io\"\n  }, \"CodePen\"), \".\"), mdx(\"script\", {\n    async: true,\n    src: \"https://production-assets.codepen.io/assets/embed/ei.js\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>Scrolling down a long list of tabular data without fixed column headings is annoying.</p><h2>TLDR</h2><p><a href=\"#demo\">Skip to the end to view source code and working demo</a></p><hr/><p>Most solutions solutions to the question &quot;how to create <a href=\"https://css-tricks.com/scroll-fix-content/\">sticky table headers</a>&quot; typically take one of two approaches.</p><ol><li>Add a fixed position to the thead or first row of the table. This approach is simple and suffices if the table is the first or only element on the page. What I am after is a scroll-then-fixed solution. Here is an <a href=\"https://css-tricks.com/examples/PersistantHeaders/\">example</a> of what I am after.</li><li>Use JavaScript to duplicate the first table row and place it in a new table fixed to the top of the page and reveal or hide the duplicated row depending on the viewer&#x27;s scroll position. This approach feels messy and and its worth mentioning that any event listeners set on the original elements will not work on the duplicated row (unless using <a href=\"https://davidwalsh.name/event-delegate\">event delegation</a>).</li></ol><p>The approach I am after is somewhere in the middle. A scroll-then-fixed solution using the original column headings to maintain event listeners.</p><h4>HTML</h4><pre><code class=\"language-HTML\">&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;Col 1&lt;/th&gt;\n      &lt;th&gt;Col 2&lt;/th&gt;\n      &lt;th&gt;Col 3&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;One&lt;/td&gt;\n      &lt;td&gt;Two&lt;/td&gt;\n      &lt;td&gt;Three&lt;/td&gt;\n    &lt;/tr&gt;\n    ...\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre><p>The HTML is straightforward. Moving on...</p><h4>CSS</h4><pre><code class=\"language-CSS\">.fixed {\n  position: fixed;\n  top: 0;\n}\n</code></pre><p>Not much to the CSS either. The <code>.fixed</code> class will be added to the thead element when a viewer scrolls to the table.</p><h4>JS</h4><pre><code class=\"language-JavaScript\">/**\n* First Calculate\n*   - Where the thead lies on the page\n*   - Where the table lies on the page\n*   - Table height\n**/\nvar table = document.querySelector(&#x27;table&#x27;),\n    thead = table.querySelector(&#x27;thead&#x27;),\n    theadOffset = thead.getBoundingClientRect().top,\n    tableHeight = +getComputedStyle(table)\n                   .getPropertyValue(&#x27;height&#x27;)\n                   .split(&#x27;px&#x27;)[0],\n    tableOffset = table.getBoundingClientRect().top,\n    tableCells = document.querySelectorAll(&#x27;th, td&#x27;);\n\n// Set the widths on all table cells so they dont resize when fixing\n// the first row\nfor (var i = 0, l = tableCells.length; i &lt; l; i++) {\n  var cell = tableCells[i];\n  cell.width = getComputedStyle(el).getPropertyValue(&#x27;width&#x27;);\n}\n\nfunction fixTableHeader(e) {\n  // If viewer has scrolled past the first row\n  // then fix/stick it to the top of the page\n  if( window.pageYOffset &gt; theadOffset ) {\n    thead.classList.add(&#x27;fixed&#x27;);\n  }\n\n  // If viewer has scrolled back above or past the table\n  // then unfreeze the first row.\n  if ( window.pageYOffset &lt; theadOffset ||\n       window.pageYOffset &gt; (tableOffset + tableHeight)) {\n      thead.classList.remove(&#x27;fixed&#x27;);\n  }\n\n}\n\n// Listen...\nwindow.addEventListener(&#x27;scroll&#x27;, fixTableHeader, false);\n</code></pre><h2>DEMO</h2><p data-height=\"265\" data-theme-id=\"dark\" data-slug-hash=\"XKKMBo\" data-default-tab=\"result\" data-user=\"dworthen\" data-embed-version=\"2\" data-pen-title=\"Fixed Table Head\" data-preview=\"true\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/dworthen/pen/XKKMBo/\">Fixed Table Head</a> by Derek Worthen (<a href=\"https://codepen.io/dworthen\">@dworthen</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p><script async=\"\" src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>","scope":{}},"frontMatter":{"title":"Fixed HTML Table Header","date":"2016-06-15","template":"post","published":true,"slug":"sticky-table-head","category":"JavaScript","tags":["HTML","CSS","JavaScript"],"description":"Large HTML tables got you down? Easily fix table headers for readability. Best part. No framework or library necessary."}},"__N_SSG":true}